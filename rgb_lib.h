

// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!



#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
	// We also try to prevent mixing versions of shared uniffi header structs.
	// If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V6
	#ifndef UNIFFI_SHARED_HEADER_V6
		#error Combining helper code from multiple versions of uniffi is not supported
	#endif // ndef UNIFFI_SHARED_HEADER_V6
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V6
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V6 in this file.           ⚠️

typedef struct RustBuffer {
	uint64_t capacity;
	uint64_t len;
	uint8_t *data;
} RustBuffer;

typedef struct ForeignBytes {
	int32_t len;
	const uint8_t *data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
	int8_t code;
	RustBuffer errorBuf;
} RustCallStatus;

#endif // UNIFFI_SHARED_H


#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t data, int8_t poll_result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiRustFutureContinuationCallback(
				UniffiRustFutureContinuationCallback cb, uint64_t data, int8_t poll_result)
{
	return cb(data, poll_result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureFree(
				UniffiForeignFutureFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceFree(
				UniffiCallbackInterfaceFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t callback_data, UniffiForeignFutureStructU8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU8(
				UniffiForeignFutureCompleteU8 cb, uint64_t callback_data, UniffiForeignFutureStructU8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t callback_data, UniffiForeignFutureStructI8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI8(
				UniffiForeignFutureCompleteI8 cb, uint64_t callback_data, UniffiForeignFutureStructI8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t callback_data, UniffiForeignFutureStructU16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU16(
				UniffiForeignFutureCompleteU16 cb, uint64_t callback_data, UniffiForeignFutureStructU16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t callback_data, UniffiForeignFutureStructI16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI16(
				UniffiForeignFutureCompleteI16 cb, uint64_t callback_data, UniffiForeignFutureStructI16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t callback_data, UniffiForeignFutureStructU32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU32(
				UniffiForeignFutureCompleteU32 cb, uint64_t callback_data, UniffiForeignFutureStructU32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t callback_data, UniffiForeignFutureStructI32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI32(
				UniffiForeignFutureCompleteI32 cb, uint64_t callback_data, UniffiForeignFutureStructI32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t callback_data, UniffiForeignFutureStructU64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU64(
				UniffiForeignFutureCompleteU64 cb, uint64_t callback_data, UniffiForeignFutureStructU64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t callback_data, UniffiForeignFutureStructI64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI64(
				UniffiForeignFutureCompleteI64 cb, uint64_t callback_data, UniffiForeignFutureStructI64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t callback_data, UniffiForeignFutureStructF32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF32(
				UniffiForeignFutureCompleteF32 cb, uint64_t callback_data, UniffiForeignFutureStructF32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t callback_data, UniffiForeignFutureStructF64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF64(
				UniffiForeignFutureCompleteF64 cb, uint64_t callback_data, UniffiForeignFutureStructF64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void* returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t callback_data, UniffiForeignFutureStructPointer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompletePointer(
				UniffiForeignFutureCompletePointer cb, uint64_t callback_data, UniffiForeignFutureStructPointer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t callback_data, UniffiForeignFutureStructRustBuffer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteRustBuffer(
				UniffiForeignFutureCompleteRustBuffer cb, uint64_t callback_data, UniffiForeignFutureStructRustBuffer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t callback_data, UniffiForeignFutureStructVoid result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteVoid(
				UniffiForeignFutureCompleteVoid cb, uint64_t callback_data, UniffiForeignFutureStructVoid result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_ADDRESS
void* uniffi_rgblibuniffi_fn_clone_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_ADDRESS
void uniffi_rgblibuniffi_fn_free_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_ADDRESS_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_ADDRESS_NEW
void* uniffi_rgblibuniffi_fn_constructor_address_new(RustBuffer address_string, RustBuffer bitcoin_network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_INVOICE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_INVOICE
void* uniffi_rgblibuniffi_fn_clone_invoice(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_INVOICE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_INVOICE
void uniffi_rgblibuniffi_fn_free_invoice(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_INVOICE_FROM_INVOICE_DATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_INVOICE_FROM_INVOICE_DATA
void* uniffi_rgblibuniffi_fn_constructor_invoice_from_invoice_data(RustBuffer invoice_data, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_INVOICE_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_INVOICE_NEW
void* uniffi_rgblibuniffi_fn_constructor_invoice_new(RustBuffer invoice_string, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_INVOICE_INVOICE_DATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_INVOICE_INVOICE_DATA
RustBuffer uniffi_rgblibuniffi_fn_method_invoice_invoice_data(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_INVOICE_INVOICE_STRING
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_INVOICE_INVOICE_STRING
RustBuffer uniffi_rgblibuniffi_fn_method_invoice_invoice_string(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_RECIPIENTINFO
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_RECIPIENTINFO
void* uniffi_rgblibuniffi_fn_clone_recipientinfo(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_RECIPIENTINFO
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_RECIPIENTINFO
void uniffi_rgblibuniffi_fn_free_recipientinfo(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_RECIPIENTINFO_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_RECIPIENTINFO_NEW
void* uniffi_rgblibuniffi_fn_constructor_recipientinfo_new(RustBuffer recipient_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_RECIPIENTINFO_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_RECIPIENTINFO_NETWORK
RustBuffer uniffi_rgblibuniffi_fn_method_recipientinfo_network(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_RECIPIENTINFO_RECIPIENT_TYPE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_RECIPIENTINFO_RECIPIENT_TYPE
RustBuffer uniffi_rgblibuniffi_fn_method_recipientinfo_recipient_type(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_TRANSPORTENDPOINT
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_TRANSPORTENDPOINT
void* uniffi_rgblibuniffi_fn_clone_transportendpoint(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_TRANSPORTENDPOINT
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_TRANSPORTENDPOINT
void uniffi_rgblibuniffi_fn_free_transportendpoint(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_TRANSPORTENDPOINT_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_TRANSPORTENDPOINT_NEW
void* uniffi_rgblibuniffi_fn_constructor_transportendpoint_new(RustBuffer transport_endpoint, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_TRANSPORTENDPOINT_TRANSPORT_TYPE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_TRANSPORTENDPOINT_TRANSPORT_TYPE
RustBuffer uniffi_rgblibuniffi_fn_method_transportendpoint_transport_type(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CLONE_WALLET
void* uniffi_rgblibuniffi_fn_clone_wallet(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_WALLET
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FREE_WALLET
void uniffi_rgblibuniffi_fn_free_wallet(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_WALLET_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_CONSTRUCTOR_WALLET_NEW
void* uniffi_rgblibuniffi_fn_constructor_wallet_new(RustBuffer wallet_data, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_BACKUP
void uniffi_rgblibuniffi_fn_method_wallet_backup(void* ptr, RustBuffer backup_path, RustBuffer password, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_BACKUP_INFO
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_BACKUP_INFO
int8_t uniffi_rgblibuniffi_fn_method_wallet_backup_info(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_BLIND_RECEIVE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_BLIND_RECEIVE
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_blind_receive(void* ptr, RustBuffer asset_id, RustBuffer amount, RustBuffer duration_seconds, RustBuffer transport_endpoints, uint8_t min_confirmations, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_CREATE_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_CREATE_UTXOS
uint8_t uniffi_rgblibuniffi_fn_method_wallet_create_utxos(void* ptr, RustBuffer online, int8_t up_to, RustBuffer num, RustBuffer size, uint64_t fee_rate, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_CREATE_UTXOS_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_CREATE_UTXOS_BEGIN
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_create_utxos_begin(void* ptr, RustBuffer online, int8_t up_to, RustBuffer num, RustBuffer size, uint64_t fee_rate, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_CREATE_UTXOS_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_CREATE_UTXOS_END
uint8_t uniffi_rgblibuniffi_fn_method_wallet_create_utxos_end(void* ptr, RustBuffer online, RustBuffer signed_psbt, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DELETE_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DELETE_TRANSFERS
int8_t uniffi_rgblibuniffi_fn_method_wallet_delete_transfers(void* ptr, RustBuffer batch_transfer_idx, int8_t no_asset_only, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DRAIN_TO
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DRAIN_TO
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_drain_to(void* ptr, RustBuffer online, RustBuffer address, int8_t destroy_assets, uint64_t fee_rate, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DRAIN_TO_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DRAIN_TO_BEGIN
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_drain_to_begin(void* ptr, RustBuffer online, RustBuffer address, int8_t destroy_assets, uint64_t fee_rate, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DRAIN_TO_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_DRAIN_TO_END
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_drain_to_end(void* ptr, RustBuffer online, RustBuffer signed_psbt, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_FAIL_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_FAIL_TRANSFERS
int8_t uniffi_rgblibuniffi_fn_method_wallet_fail_transfers(void* ptr, RustBuffer online, RustBuffer batch_transfer_idx, int8_t no_asset_only, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_ADDRESS
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_get_address(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_ASSET_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_ASSET_BALANCE
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_get_asset_balance(void* ptr, RustBuffer asset_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_ASSET_METADATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_ASSET_METADATA
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_get_asset_metadata(void* ptr, RustBuffer asset_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_BTC_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_BTC_BALANCE
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_get_btc_balance(void* ptr, RustBuffer online, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_FEE_ESTIMATION
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_FEE_ESTIMATION
double uniffi_rgblibuniffi_fn_method_wallet_get_fee_estimation(void* ptr, RustBuffer online, uint16_t blocks, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_MEDIA_DIR
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_MEDIA_DIR
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_get_media_dir(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_WALLET_DATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_WALLET_DATA
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_get_wallet_data(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_WALLET_DIR
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GET_WALLET_DIR
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_get_wallet_dir(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GO_ONLINE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_GO_ONLINE
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_go_online(void* ptr, int8_t skip_consistency_check, RustBuffer indexer_url, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_ISSUE_ASSET_CFA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_ISSUE_ASSET_CFA
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_issue_asset_cfa(void* ptr, RustBuffer online, RustBuffer name, RustBuffer details, uint8_t precision, RustBuffer amounts, RustBuffer file_path, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_ISSUE_ASSET_NIA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_ISSUE_ASSET_NIA
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_issue_asset_nia(void* ptr, RustBuffer online, RustBuffer ticker, RustBuffer name, uint8_t precision, RustBuffer amounts, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_ISSUE_ASSET_UDA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_ISSUE_ASSET_UDA
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_issue_asset_uda(void* ptr, RustBuffer online, RustBuffer ticker, RustBuffer name, RustBuffer details, uint8_t precision, RustBuffer media_file_path, RustBuffer attachments_file_paths, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_ASSETS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_ASSETS
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_list_assets(void* ptr, RustBuffer filter_asset_schemas, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_TRANSACTIONS
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_list_transactions(void* ptr, RustBuffer online, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_TRANSFERS
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_list_transfers(void* ptr, RustBuffer asset_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_UNSPENTS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_LIST_UNSPENTS
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_list_unspents(void* ptr, RustBuffer online, int8_t settled_only, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_REFRESH
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_REFRESH
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_refresh(void* ptr, RustBuffer online, RustBuffer asset_id, RustBuffer filter, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_send(void* ptr, RustBuffer online, RustBuffer recipient_map, int8_t donation, uint64_t fee_rate, uint8_t min_confirmations, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BEGIN
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_send_begin(void* ptr, RustBuffer online, RustBuffer recipient_map, int8_t donation, uint64_t fee_rate, uint8_t min_confirmations, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BTC
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BTC
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_send_btc(void* ptr, RustBuffer online, RustBuffer address, uint64_t amount, uint64_t fee_rate, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BTC_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BTC_BEGIN
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_send_btc_begin(void* ptr, RustBuffer online, RustBuffer address, uint64_t amount, uint64_t fee_rate, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BTC_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_BTC_END
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_send_btc_end(void* ptr, RustBuffer online, RustBuffer signed_psbt, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SEND_END
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_send_end(void* ptr, RustBuffer online, RustBuffer signed_psbt, int8_t skip_sync, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SIGN_PSBT
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SIGN_PSBT
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_sign_psbt(void* ptr, RustBuffer unsigned_psbt, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SYNC
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_SYNC
void uniffi_rgblibuniffi_fn_method_wallet_sync(void* ptr, RustBuffer online, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_WITNESS_RECEIVE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_METHOD_WALLET_WITNESS_RECEIVE
RustBuffer uniffi_rgblibuniffi_fn_method_wallet_witness_receive(void* ptr, RustBuffer asset_id, RustBuffer amount, RustBuffer duration_seconds, RustBuffer transport_endpoints, uint8_t min_confirmations, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FUNC_GENERATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FUNC_GENERATE_KEYS
RustBuffer uniffi_rgblibuniffi_fn_func_generate_keys(RustBuffer bitcoin_network, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FUNC_RESTORE_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FUNC_RESTORE_BACKUP
void uniffi_rgblibuniffi_fn_func_restore_backup(RustBuffer backup_path, RustBuffer password, RustBuffer data_dir, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FUNC_RESTORE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_FN_FUNC_RESTORE_KEYS
RustBuffer uniffi_rgblibuniffi_fn_func_restore_keys(RustBuffer bitcoin_network, RustBuffer mnemonic, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_ALLOC
RustBuffer ffi_rgblibuniffi_rustbuffer_alloc(uint64_t size, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_rgblibuniffi_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_FREE
void ffi_rgblibuniffi_rustbuffer_free(RustBuffer buf, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUSTBUFFER_RESERVE
RustBuffer ffi_rgblibuniffi_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U8
void ffi_rgblibuniffi_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U8
void ffi_rgblibuniffi_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U8
void ffi_rgblibuniffi_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_rgblibuniffi_rust_future_complete_u8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I8
void ffi_rgblibuniffi_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I8
void ffi_rgblibuniffi_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I8
void ffi_rgblibuniffi_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I8
int8_t ffi_rgblibuniffi_rust_future_complete_i8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U16
void ffi_rgblibuniffi_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U16
void ffi_rgblibuniffi_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U16
void ffi_rgblibuniffi_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_rgblibuniffi_rust_future_complete_u16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I16
void ffi_rgblibuniffi_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I16
void ffi_rgblibuniffi_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I16
void ffi_rgblibuniffi_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I16
int16_t ffi_rgblibuniffi_rust_future_complete_i16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U32
void ffi_rgblibuniffi_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U32
void ffi_rgblibuniffi_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U32
void ffi_rgblibuniffi_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_rgblibuniffi_rust_future_complete_u32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I32
void ffi_rgblibuniffi_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I32
void ffi_rgblibuniffi_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I32
void ffi_rgblibuniffi_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I32
int32_t ffi_rgblibuniffi_rust_future_complete_i32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_U64
void ffi_rgblibuniffi_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_U64
void ffi_rgblibuniffi_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_U64
void ffi_rgblibuniffi_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_rgblibuniffi_rust_future_complete_u64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_I64
void ffi_rgblibuniffi_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_I64
void ffi_rgblibuniffi_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_I64
void ffi_rgblibuniffi_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_I64
int64_t ffi_rgblibuniffi_rust_future_complete_i64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_F32
void ffi_rgblibuniffi_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_F32
void ffi_rgblibuniffi_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_F32
void ffi_rgblibuniffi_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_F32
float ffi_rgblibuniffi_rust_future_complete_f32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_F64
void ffi_rgblibuniffi_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_F64
void ffi_rgblibuniffi_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_F64
void ffi_rgblibuniffi_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_F64
double ffi_rgblibuniffi_rust_future_complete_f64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_POINTER
void ffi_rgblibuniffi_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_POINTER
void ffi_rgblibuniffi_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_POINTER
void ffi_rgblibuniffi_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_POINTER
void* ffi_rgblibuniffi_rust_future_complete_pointer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_rgblibuniffi_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_rgblibuniffi_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_rgblibuniffi_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_rgblibuniffi_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_POLL_VOID
void ffi_rgblibuniffi_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_CANCEL_VOID
void ffi_rgblibuniffi_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_FREE_VOID
void ffi_rgblibuniffi_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_RUST_FUTURE_COMPLETE_VOID
void ffi_rgblibuniffi_rust_future_complete_void(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_FUNC_GENERATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_FUNC_GENERATE_KEYS
uint16_t uniffi_rgblibuniffi_checksum_func_generate_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_FUNC_RESTORE_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_FUNC_RESTORE_BACKUP
uint16_t uniffi_rgblibuniffi_checksum_func_restore_backup(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_FUNC_RESTORE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_FUNC_RESTORE_KEYS
uint16_t uniffi_rgblibuniffi_checksum_func_restore_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_INVOICE_INVOICE_DATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_INVOICE_INVOICE_DATA
uint16_t uniffi_rgblibuniffi_checksum_method_invoice_invoice_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_INVOICE_INVOICE_STRING
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_INVOICE_INVOICE_STRING
uint16_t uniffi_rgblibuniffi_checksum_method_invoice_invoice_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_RECIPIENTINFO_NETWORK
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_RECIPIENTINFO_NETWORK
uint16_t uniffi_rgblibuniffi_checksum_method_recipientinfo_network(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_RECIPIENTINFO_RECIPIENT_TYPE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_RECIPIENTINFO_RECIPIENT_TYPE
uint16_t uniffi_rgblibuniffi_checksum_method_recipientinfo_recipient_type(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_TRANSPORTENDPOINT_TRANSPORT_TYPE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_TRANSPORTENDPOINT_TRANSPORT_TYPE
uint16_t uniffi_rgblibuniffi_checksum_method_transportendpoint_transport_type(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_BACKUP
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_BACKUP
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_backup(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_BACKUP_INFO
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_BACKUP_INFO
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_backup_info(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_BLIND_RECEIVE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_BLIND_RECEIVE
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_blind_receive(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_CREATE_UTXOS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_CREATE_UTXOS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_create_utxos(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_CREATE_UTXOS_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_CREATE_UTXOS_BEGIN
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_create_utxos_begin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_CREATE_UTXOS_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_CREATE_UTXOS_END
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_create_utxos_end(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DELETE_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DELETE_TRANSFERS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_delete_transfers(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DRAIN_TO
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DRAIN_TO
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_drain_to(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DRAIN_TO_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DRAIN_TO_BEGIN
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_drain_to_begin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DRAIN_TO_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_DRAIN_TO_END
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_drain_to_end(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_FAIL_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_FAIL_TRANSFERS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_fail_transfers(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_ADDRESS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_ADDRESS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_address(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_ASSET_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_ASSET_BALANCE
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_asset_balance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_ASSET_METADATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_ASSET_METADATA
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_asset_metadata(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_BTC_BALANCE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_BTC_BALANCE
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_btc_balance(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_FEE_ESTIMATION
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_FEE_ESTIMATION
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_fee_estimation(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_MEDIA_DIR
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_MEDIA_DIR
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_media_dir(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_WALLET_DATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_WALLET_DATA
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_wallet_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_WALLET_DIR
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GET_WALLET_DIR
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_get_wallet_dir(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GO_ONLINE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_GO_ONLINE
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_go_online(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_ISSUE_ASSET_CFA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_ISSUE_ASSET_CFA
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_issue_asset_cfa(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_ISSUE_ASSET_NIA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_ISSUE_ASSET_NIA
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_issue_asset_nia(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_ISSUE_ASSET_UDA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_ISSUE_ASSET_UDA
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_issue_asset_uda(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_ASSETS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_ASSETS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_list_assets(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_TRANSACTIONS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_list_transactions(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_TRANSFERS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_list_transfers(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_UNSPENTS
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_LIST_UNSPENTS
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_list_unspents(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_REFRESH
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_REFRESH
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_refresh(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_send(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BEGIN
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_send_begin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BTC
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BTC
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_send_btc(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BTC_BEGIN
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BTC_BEGIN
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_send_btc_begin(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BTC_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_BTC_END
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_send_btc_end(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_END
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SEND_END
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_send_end(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SIGN_PSBT
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SIGN_PSBT
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_sign_psbt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SYNC
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_SYNC
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_sync(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_WITNESS_RECEIVE
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_METHOD_WALLET_WITNESS_RECEIVE
uint16_t uniffi_rgblibuniffi_checksum_method_wallet_witness_receive(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_ADDRESS_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_ADDRESS_NEW
uint16_t uniffi_rgblibuniffi_checksum_constructor_address_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_INVOICE_FROM_INVOICE_DATA
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_INVOICE_FROM_INVOICE_DATA
uint16_t uniffi_rgblibuniffi_checksum_constructor_invoice_from_invoice_data(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_INVOICE_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_INVOICE_NEW
uint16_t uniffi_rgblibuniffi_checksum_constructor_invoice_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_RECIPIENTINFO_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_RECIPIENTINFO_NEW
uint16_t uniffi_rgblibuniffi_checksum_constructor_recipientinfo_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_TRANSPORTENDPOINT_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_TRANSPORTENDPOINT_NEW
uint16_t uniffi_rgblibuniffi_checksum_constructor_transportendpoint_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_WALLET_NEW
#define UNIFFI_FFIDEF_UNIFFI_RGBLIBUNIFFI_CHECKSUM_CONSTRUCTOR_WALLET_NEW
uint16_t uniffi_rgblibuniffi_checksum_constructor_wallet_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_RGBLIBUNIFFI_UNIFFI_CONTRACT_VERSION
uint32_t ffi_rgblibuniffi_uniffi_contract_version(void
    
);
#endif

